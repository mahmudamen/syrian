//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Syrian.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SyDB : DbContext
    {
        public SyDB()
            : base("name=SyDB")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Depts> Depts { get; set; }
        public virtual DbSet<EmpHis> EmpHis { get; set; }
        public virtual DbSet<EmpInfo> EmpInfo { get; set; }
        public virtual DbSet<EmpShft> EmpShft { get; set; }
        public virtual DbSet<Jop> Jop { get; set; }
        public virtual DbSet<Loan> Loan { get; set; }
        public virtual DbSet<Mors> Mors { get; set; }
        public virtual DbSet<Punsh> Punsh { get; set; }
        public virtual DbSet<Sal> Sal { get; set; }
        public virtual DbSet<Vac> Vac { get; set; }
        public virtual DbSet<Role> Role { get; set; }
        public virtual DbSet<UserRole> UserRole { get; set; }
        public virtual DbSet<Usr> Usr { get; set; }
        public virtual DbSet<vDepts> vDepts { get; set; }
        public virtual DbSet<vEDJ> vEDJ { get; set; }
        public virtual DbSet<vEmpHis> vEmpHis { get; set; }
        public virtual DbSet<vEmpl> vEmpl { get; set; }
        public virtual DbSet<vEmplon> vEmplon { get; set; }
        public virtual DbSet<vJops> vJops { get; set; }
        public virtual DbSet<vLoanE> vLoanE { get; set; }
        public virtual DbSet<vMorsE> vMorsE { get; set; }
        public virtual DbSet<vPunE> vPunE { get; set; }
        public virtual DbSet<vSalary> vSalary { get; set; }
        public virtual DbSet<vSalEntry> vSalEntry { get; set; }
        public virtual DbSet<vTSal> vTSal { get; set; }
        public virtual DbSet<vUsrEmp> vUsrEmp { get; set; }
        public virtual DbSet<vVacE> vVacE { get; set; }
        public virtual DbSet<vURoles> vURoles { get; set; }
        public virtual DbSet<ItmList> ItmList { get; set; }
        public virtual DbSet<Shft> Shft { get; set; }
        public virtual DbSet<TypeList> TypeList { get; set; }
        public virtual DbSet<orditm> orditm { get; set; }
        public virtual DbSet<vcashrp> vcashrp { get; set; }
        public virtual DbSet<OrdList> OrdList { get; set; }
        public virtual DbSet<vOrdList> vOrdList { get; set; }
        public virtual DbSet<ExpDaily> ExpDaily { get; set; }
        public virtual DbSet<ExpList> ExpList { get; set; }
        public virtual DbSet<vExpList> vExpList { get; set; }
    
        [DbFunction("SyDB", "cashrpfuc")]
        public virtual IQueryable<cashrpfuc_Result> cashrpfuc(Nullable<System.DateTime> datay)
        {
            var datayParameter = datay.HasValue ?
                new ObjectParameter("datay", datay) :
                new ObjectParameter("datay", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<cashrpfuc_Result>("[SyDB].[cashrpfuc](@datay)", datayParameter);
        }
    
        [DbFunction("SyDB", "ex")]
        public virtual IQueryable<ex_Result> ex(Nullable<System.DateTime> s, Nullable<System.DateTime> e)
        {
            var sParameter = s.HasValue ?
                new ObjectParameter("s", s) :
                new ObjectParameter("s", typeof(System.DateTime));
    
            var eParameter = e.HasValue ?
                new ObjectParameter("e", e) :
                new ObjectParameter("e", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ex_Result>("[SyDB].[ex](@s, @e)", sParameter, eParameter);
        }
    
        [DbFunction("SyDB", "incom")]
        public virtual IQueryable<incom_Result> incom(Nullable<System.DateTime> s, Nullable<System.DateTime> e)
        {
            var sParameter = s.HasValue ?
                new ObjectParameter("s", s) :
                new ObjectParameter("s", typeof(System.DateTime));
    
            var eParameter = e.HasValue ?
                new ObjectParameter("e", e) :
                new ObjectParameter("e", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<incom_Result>("[SyDB].[incom](@s, @e)", sParameter, eParameter);
        }
    
        [DbFunction("SyDB", "incomshfit")]
        public virtual IQueryable<incomshfit_Result> incomshfit(Nullable<int> s)
        {
            var sParameter = s.HasValue ?
                new ObjectParameter("s", s) :
                new ObjectParameter("s", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<incomshfit_Result>("[SyDB].[incomshfit](@s)", sParameter);
        }
    }
}
